import { Bicep, CallServiceEffect, ConfigurationBicep, ContextV3, FileEffect, FxError, ProjectSettingsV3, ProvisionBicep, Result } from "@microsoft/teamsfx-api";
export declare function persistProvisionBicep(projectPath: string, provisionBicep: ProvisionBicep): Promise<Result<any, FxError>>;
export declare function persistProvisionBicepPlans(projectPath: string, provisionBicep: ProvisionBicep): string[];
export declare function persistConfigBicep(projectPath: string, configBicep: ConfigurationBicep): Result<any, FxError>;
export declare function persistConfigBicepPlans(projectPath: string, provisionBicep: ProvisionBicep): string[];
export declare function persistParamsBicepPlans(projectPath: string, params: Record<string, string>): string[];
export declare function persistParams(projectPath: string, params: Record<string, string>): Promise<Result<any, FxError>>;
export declare function persistBicep(projectPath: string, bicep: Bicep): Promise<Result<any, FxError>>;
export declare function persistBicepPlans(projectPath: string, bicep: Bicep): string[];
export declare function fileEffectPlanStrings(fileEffect: FileEffect): string[];
export declare function serviceEffectPlanString(serviceEffect: CallServiceEffect): string;
export declare function createFilesEffects(files: string[], operateIfExists?: "replace" | "skip", remarks?: string): FileEffect[];
export declare function createFileEffect(file: string, operateIfExists?: "replace" | "skip" | "append", remarks?: string): FileEffect;
export declare function appendFileEffect(file: string, remarks?: string): FileEffect;
export declare function fileEffectPlanString(effect: FileEffect): string | undefined;
export declare function newProjectSettingsV3(): ProjectSettingsV3;
export declare function createContextV3(projectSettings?: ProjectSettingsV3): ContextV3;
//# sourceMappingURL=utils.d.ts.map