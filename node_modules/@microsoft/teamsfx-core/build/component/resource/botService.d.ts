import { FxError, Result, Action, ContextV3, MaybePromise, InputsWithProjectPath, ProvisionContextV3, CloudResource, AzureAccountProvider } from "@microsoft/teamsfx-api";
import "reflect-metadata";
import { TokenCredentialsBase } from "@azure/ms-rest-nodeauth";
export declare class BotServiceResource implements CloudResource {
    outputs: {
        botId: {
            key: string;
        };
        botPassword: {
            key: string;
        };
    };
    finalOutputKeys: string[];
    secretFields: string[];
    readonly name = "bot-service";
    generateBicep(context: ContextV3, inputs: InputsWithProjectPath): MaybePromise<Result<Action | undefined, FxError>>;
    provision(context: ContextV3, inputs: InputsWithProjectPath): MaybePromise<Result<Action | undefined, FxError>>;
}
export declare function createBotAAD(ctx: ProvisionContextV3): Promise<Result<any, FxError>>;
export declare function createBotRegInAppStudio(botConfig: any, ctx: ProvisionContextV3): Promise<Result<undefined, FxError>>;
export declare function getAzureAccountCredential(tokenProvider: AzureAccountProvider): Promise<TokenCredentialsBase>;
//# sourceMappingURL=botService.d.ts.map