"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpfxResource = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
require("reflect-metadata");
const typedi_1 = require("typedi");
let SpfxResource = class SpfxResource {
    constructor() {
        this.name = "spfx";
        this.outputs = {};
        this.finalOutputKeys = [];
    }
    deploy(context, inputs) {
        const action = {
            name: "spfx.deploy",
            type: "function",
            plan: (context, inputs) => {
                return teamsfx_api_1.ok([
                    {
                        type: "service",
                        name: "sharepoint",
                        remarks: `deploy spfx with path: ${inputs["spfx"].folder}, type: ${inputs["spfx"].type}`,
                    },
                ]);
            },
            execute: async (context, inputs) => {
                return teamsfx_api_1.ok([
                    {
                        type: "service",
                        name: "sharepoint",
                        remarks: `deploy spfx with path: ${inputs["spfx"].folder}, type: ${inputs["spfx"].type}`,
                    },
                ]);
            },
        };
        return teamsfx_api_1.ok(action);
    }
};
SpfxResource = tslib_1.__decorate([
    typedi_1.Service("spfx")
], SpfxResource);
exports.SpfxResource = SpfxResource;
//# sourceMappingURL=spfx.js.map